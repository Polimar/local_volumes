{"version":3,"file":"static/js/584.bbf282df.chunk.js","mappings":"wMAKA,MAAMA,EAAiBC,EAAAA,GAAOC,GAAG;;;;;;;;EAU3BC,EAAYF,EAAAA,GAAOG,IAAI;;;;;;;;;;;;;;;EAiBvBC,EAAYJ,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;;;EAuBtBI,EAAcL,EAAAA,GAAOM,MAAM;;;;;;;;;;;;;;;;;;;;EAsB3BC,EAAeP,EAAAA,GAAOC,GAAG;;;;EAMzBO,EAAeR,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;EAezBQ,EAAOT,EAAAA,GAAOC,GAAG;;;;;;EAwFvB,EAhFcS,KACZ,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,SAAU,GACVC,SAAU,MAELC,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACrC,MAAEK,EAAK,MAAEC,IAAUC,EAAAA,EAAAA,KACnBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1Bf,GAAagB,IAAI,IACZA,EACH,CAACH,GAAOC,KACP,EAsBL,OACEG,EAAAA,EAAAA,MAAC9B,EAAc,CAAA+B,SAAA,EACbC,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAC,aACND,EAAAA,EAAAA,MAAC3B,EAAS,CAAC8B,SAtBMC,UAGnB,GAFAT,EAAEU,iBAEGvB,EAASG,UAAaH,EAASI,SAApC,CAIAE,GAAa,GAEb,UACQC,EAAMP,GACZU,EAAS,IACX,CAAE,MAAOF,GACPgB,QAAQhB,MAAM,2BAA4BA,EAC5C,CAAC,QACCF,GAAa,EACf,CAXA,CAWA,EAMoCa,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WAEHX,IAASY,EAAAA,EAAAA,KAACxB,EAAY,CAAAuB,SAAEX,KAEzBU,EAAAA,EAAAA,MAACzB,EAAS,CAAA0B,SAAA,EACRC,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,WAAUN,SAAC,sBAC1BC,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLC,GAAG,WACHb,KAAK,WACLC,MAAOf,EAASG,SAChByB,SAAUhB,EACViB,UAAQ,QAIZX,EAAAA,EAAAA,MAACzB,EAAS,CAAA0B,SAAA,EACRC,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,WAAUN,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SACEM,KAAK,WACLC,GAAG,WACHb,KAAK,WACLC,MAAOf,EAASI,SAChBwB,SAAUhB,EACViB,UAAQ,QAIZT,EAAAA,EAAAA,KAAC1B,EAAW,CAACgC,KAAK,SAASI,SAAUzB,EAAUc,SAC5Cd,EAAY,sBAAwB,YAGvCa,EAAAA,EAAAA,MAACrB,EAAY,CAAAsB,SAAA,CAAC,+BACeC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,YAAWb,SAAC,uBAGrC,C","sources":["components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: var(--background-color);\n`;\n\nconst LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 400px;\n  padding: 30px;\n  background-color: var(--chat-bg);\n  border-radius: 12px;\n  box-shadow: 0 4px 12px var(--shadow-color);\n\n  h2 {\n    margin-bottom: 24px;\n    text-align: center;\n    color: var(--primary-color);\n  }\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n\n  label {\n    display: block;\n    margin-bottom: 8px;\n    font-weight: 500;\n  }\n\n  input {\n    width: 100%;\n    padding: 12px;\n    border: 1px solid var(--border-color);\n    border-radius: 8px;\n    font-size: 16px;\n    transition: border-color 0.2s;\n\n    &:focus {\n      border-color: var(--primary-color);\n    }\n  }\n`;\n\nconst LoginButton = styled.button`\n  padding: 12px;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  margin-top: 10px;\n\n  &:hover {\n    background-color: var(--accent-color);\n  }\n\n  &:disabled {\n    background-color: var(--text-secondary);\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--error-color);\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nconst RegisterLink = styled.div`\n  margin-top: 20px;\n  text-align: center;\n  font-size: 15px;\n\n  a {\n    color: var(--primary-color);\n    font-weight: 600;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst Logo = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n  color: var(--primary-color);\n  margin-bottom: 30px;\n  text-align: center;\n`;\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const { login, error } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!formData.username || !formData.password) {\n      return;\n    }\n    \n    setIsLoading(true);\n    \n    try {\n      await login(formData);\n      navigate('/');\n    } catch (error) {\n      console.error('Errore durante il login:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <LoginContainer>\n      <Logo>WaiChat</Logo>\n      <LoginForm onSubmit={handleSubmit}>\n        <h2>Accedi</h2>\n        \n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        \n        <FormGroup>\n          <label htmlFor=\"username\">Username o Email</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            required\n          />\n        </FormGroup>\n        \n        <FormGroup>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n        </FormGroup>\n        \n        <LoginButton type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Accesso in corso...' : 'Accedi'}\n        </LoginButton>\n        \n        <RegisterLink>\n          Non hai ancora un account? <Link to=\"/register\">Registrati</Link>\n        </RegisterLink>\n      </LoginForm>\n    </LoginContainer>\n  );\n};\n\nexport default Login; "],"names":["LoginContainer","styled","div","LoginForm","form","FormGroup","LoginButton","button","ErrorMessage","RegisterLink","Logo","Login","formData","setFormData","useState","username","password","isLoading","setIsLoading","login","error","useAuth","navigate","useNavigate","handleChange","e","name","value","target","prev","_jsxs","children","_jsx","onSubmit","async","preventDefault","console","htmlFor","type","id","onChange","required","disabled","Link","to"],"sourceRoot":""}