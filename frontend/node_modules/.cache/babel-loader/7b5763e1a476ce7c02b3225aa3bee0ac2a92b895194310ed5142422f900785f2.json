{"ast":null,"code":"import React,{useEffect,lazy,Suspense}from'react';import{Routes,Route,Navigate}from'react-router-dom';import styled from'styled-components';import{AuthProvider,useAuth}from'./contexts/AuthContext';import socketService from'./services/socketService';// Lazy loading dei componenti per ottimizzazione delle performance\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=/*#__PURE__*/lazy(()=>import('./components/Login'));const Register=/*#__PURE__*/lazy(()=>import('./components/Register'));const Chat=/*#__PURE__*/lazy(()=>import('./components/Chat'));const AdminPanel=/*#__PURE__*/lazy(()=>import(\"./components/admin/AdminPanel\"));const LoadingScreen=styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: var(--background-color);\n  color: var(--primary-color);\n  font-size: 1.5rem;\n`;// Componente wrapper per route protette\nconst PrivateRoute=_ref=>{let{children}=_ref;const{isAuthenticated,loading}=useAuth();if(loading){return/*#__PURE__*/_jsx(LoadingScreen,{children:\"Caricamento...\"});}return isAuthenticated?children:/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});};// App principale\nconst AppContent=()=>{const{isAuthenticated,user,token}=useAuth();// Connetti socket quando l'utente è autenticato\nuseEffect(()=>{if(isAuthenticated&&token){socketService.connect(token);return()=>{socketService.disconnect();};}},[isAuthenticated,token]);return/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingScreen,{children:\"Caricamento...\"}),children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(PrivateRoute,{children:[user&&user.role===\"admin\"?/*#__PURE__*/_jsx(Navigate,{to:\"/admin\"}):/*#__PURE__*/_jsx(Chat,{}),/*#__PURE__*/_jsx(Chat,{})]})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:!isAuthenticated?/*#__PURE__*/_jsx(Login,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:user&&user.role===\"admin\"?/*#__PURE__*/_jsx(AdminPanel,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:!isAuthenticated?/*#__PURE__*/_jsx(Register,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:isAuthenticated?\"/\":\"/login\"})})]})});};const App=()=>{return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(AppContent,{})});};export default App;","map":{"version":3,"names":["React","useEffect","lazy","Suspense","Routes","Route","Navigate","styled","AuthProvider","useAuth","socketService","jsx","_jsx","jsxs","_jsxs","Login","Register","Chat","AdminPanel","LoadingScreen","div","PrivateRoute","_ref","children","isAuthenticated","loading","to","AppContent","user","token","connect","disconnect","fallback","path","element","role","App"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport socketService from './services/socketService';\n\n// Lazy loading dei componenti per ottimizzazione delle performance\nconst Login = lazy(() => import('./components/Login'));\nconst Register = lazy(() => import('./components/Register'));\nconst Chat = lazy(() => import('./components/Chat'));\nconst AdminPanel = lazy(() => import(\"./components/admin/AdminPanel\"));\n\nconst LoadingScreen = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: var(--background-color);\n  color: var(--primary-color);\n  font-size: 1.5rem;\n`;\n\n// Componente wrapper per route protette\nconst PrivateRoute = ({ children }) => {\n  const { isAuthenticated, loading } = useAuth();\n  \n  if (loading) {\n    return <LoadingScreen>Caricamento...</LoadingScreen>;\n  }\n  \n  return isAuthenticated ? children : <Navigate to=\"/login\" />;\n};\n\n// App principale\nconst AppContent = () => {\n  const { isAuthenticated, user, token } = useAuth();\n  \n  // Connetti socket quando l'utente è autenticato\n  useEffect(() => {\n    if (isAuthenticated && token) {\n      socketService.connect(token);\n      \n      return () => {\n        socketService.disconnect();\n      };\n    }\n  }, [isAuthenticated, token]);\n  \n  return (\n    <Suspense fallback={<LoadingScreen>Caricamento...</LoadingScreen>}>\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <PrivateRoute>\n              {user && user.role === \"admin\" ? <Navigate to=\"/admin\" /> : <Chat />}\n              <Chat />\n            </PrivateRoute>\n          } \n        />\n        <Route path=\"/login\" element={!isAuthenticated ? <Login /> : <Navigate to=\"/\" />} />\n        <Route \n          path=\"/admin\" \n          element={\n            <PrivateRoute>\n              {user && user.role === \"admin\" ? <AdminPanel /> : <Navigate to=\"/\" />}\n            </PrivateRoute>\n          } \n        />\n        <Route path=\"/register\" element={!isAuthenticated ? <Register /> : <Navigate to=\"/\" />} />\n        <Route path=\"*\" element={<Navigate to={isAuthenticated ? \"/\" : \"/login\"} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <AppContent />\n    </AuthProvider>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,IAAI,CAAEC,QAAQ,KAAQ,OAAO,CACxD,OAASC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAC1D,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,YAAY,CAAEC,OAAO,KAAQ,wBAAwB,CAC9D,MAAO,CAAAC,aAAa,KAAM,0BAA0B,CAEpD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,KAAK,cAAGb,IAAI,CAAC,IAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC,CACtD,KAAM,CAAAc,QAAQ,cAAGd,IAAI,CAAC,IAAM,MAAM,CAAC,uBAAuB,CAAC,CAAC,CAC5D,KAAM,CAAAe,IAAI,cAAGf,IAAI,CAAC,IAAM,MAAM,CAAC,mBAAmB,CAAC,CAAC,CACpD,KAAM,CAAAgB,UAAU,cAAGhB,IAAI,CAAC,IAAM,MAAM,CAAC,+BAA+B,CAAC,CAAC,CAEtE,KAAM,CAAAiB,aAAa,CAAGZ,MAAM,CAACa,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC,KAAM,CAAEE,eAAe,CAAEC,OAAQ,CAAC,CAAGhB,OAAO,CAAC,CAAC,CAE9C,GAAIgB,OAAO,CAAE,CACX,mBAAOb,IAAA,CAACO,aAAa,EAAAI,QAAA,CAAC,gBAAc,CAAe,CAAC,CACtD,CAEA,MAAO,CAAAC,eAAe,CAAGD,QAAQ,cAAGX,IAAA,CAACN,QAAQ,EAACoB,EAAE,CAAC,QAAQ,CAAE,CAAC,CAC9D,CAAC,CAED;AACA,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEH,eAAe,CAAEI,IAAI,CAAEC,KAAM,CAAC,CAAGpB,OAAO,CAAC,CAAC,CAElD;AACAR,SAAS,CAAC,IAAM,CACd,GAAIuB,eAAe,EAAIK,KAAK,CAAE,CAC5BnB,aAAa,CAACoB,OAAO,CAACD,KAAK,CAAC,CAE5B,MAAO,IAAM,CACXnB,aAAa,CAACqB,UAAU,CAAC,CAAC,CAC5B,CAAC,CACH,CACF,CAAC,CAAE,CAACP,eAAe,CAAEK,KAAK,CAAC,CAAC,CAE5B,mBACEjB,IAAA,CAACT,QAAQ,EAAC6B,QAAQ,cAAEpB,IAAA,CAACO,aAAa,EAAAI,QAAA,CAAC,gBAAc,CAAe,CAAE,CAAAA,QAAA,cAChET,KAAA,CAACV,MAAM,EAAAmB,QAAA,eACLX,IAAA,CAACP,KAAK,EACJ4B,IAAI,CAAC,GAAG,CACRC,OAAO,cACLpB,KAAA,CAACO,YAAY,EAAAE,QAAA,EACVK,IAAI,EAAIA,IAAI,CAACO,IAAI,GAAK,OAAO,cAAGvB,IAAA,CAACN,QAAQ,EAACoB,EAAE,CAAC,QAAQ,CAAE,CAAC,cAAGd,IAAA,CAACK,IAAI,GAAE,CAAC,cACpEL,IAAA,CAACK,IAAI,GAAE,CAAC,EACI,CACf,CACF,CAAC,cACFL,IAAA,CAACP,KAAK,EAAC4B,IAAI,CAAC,QAAQ,CAACC,OAAO,CAAE,CAACV,eAAe,cAAGZ,IAAA,CAACG,KAAK,GAAE,CAAC,cAAGH,IAAA,CAACN,QAAQ,EAACoB,EAAE,CAAC,GAAG,CAAE,CAAE,CAAE,CAAC,cACpFd,IAAA,CAACP,KAAK,EACJ4B,IAAI,CAAC,QAAQ,CACbC,OAAO,cACLtB,IAAA,CAACS,YAAY,EAAAE,QAAA,CACVK,IAAI,EAAIA,IAAI,CAACO,IAAI,GAAK,OAAO,cAAGvB,IAAA,CAACM,UAAU,GAAE,CAAC,cAAGN,IAAA,CAACN,QAAQ,EAACoB,EAAE,CAAC,GAAG,CAAE,CAAC,CACzD,CACf,CACF,CAAC,cACFd,IAAA,CAACP,KAAK,EAAC4B,IAAI,CAAC,WAAW,CAACC,OAAO,CAAE,CAACV,eAAe,cAAGZ,IAAA,CAACI,QAAQ,GAAE,CAAC,cAAGJ,IAAA,CAACN,QAAQ,EAACoB,EAAE,CAAC,GAAG,CAAE,CAAE,CAAE,CAAC,cAC1Fd,IAAA,CAACP,KAAK,EAAC4B,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEtB,IAAA,CAACN,QAAQ,EAACoB,EAAE,CAAEF,eAAe,CAAG,GAAG,CAAG,QAAS,CAAE,CAAE,CAAE,CAAC,EACzE,CAAC,CACD,CAAC,CAEf,CAAC,CAED,KAAM,CAAAY,GAAG,CAAGA,CAAA,GAAM,CAChB,mBACExB,IAAA,CAACJ,YAAY,EAAAe,QAAA,cACXX,IAAA,CAACe,UAAU,GAAE,CAAC,CACF,CAAC,CAEnB,CAAC,CAED,cAAe,CAAAS,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}