{"ast":null,"code":"import{io}from'socket.io-client';class SocketService{constructor(){this.socket=null;this.callbacks={receiveMessage:[],userTyping:[],userOnline:[],userOffline:[]};}connect(token){const serverUrl=process.env.REACT_APP_SOCKET_URL||'http://localhost:5000';this.socket=io(serverUrl,{auth:{token},transports:['websocket'],withCredentials:true});this.setupListeners();return this.socket;}disconnect(){if(this.socket){this.socket.disconnect();this.socket=null;}}setupListeners(){if(!this.socket)return;this.socket.on('receive_message',data=>{this.callbacks.receiveMessage.forEach(callback=>callback(data));});this.socket.on('user_typing',data=>{this.callbacks.userTyping.forEach(callback=>callback(data));});this.socket.on('user_online',data=>{this.callbacks.userOnline.forEach(callback=>callback(data));});this.socket.on('user_offline',data=>{this.callbacks.userOffline.forEach(callback=>callback(data));});}joinChat(chatId){if(this.socket){this.socket.emit('join_chat',chatId);}}leaveChat(chatId){if(this.socket){this.socket.emit('leave_chat',chatId);}}sendMessage(messageData){if(this.socket){this.socket.emit('send_message',messageData);}}typing(data){if(this.socket){this.socket.emit('typing',data);}}onReceiveMessage(callback){this.callbacks.receiveMessage.push(callback);return()=>{this.callbacks.receiveMessage=this.callbacks.receiveMessage.filter(cb=>cb!==callback);};}onUserTyping(callback){this.callbacks.userTyping.push(callback);return()=>{this.callbacks.userTyping=this.callbacks.userTyping.filter(cb=>cb!==callback);};}onUserOnline(callback){this.callbacks.userOnline.push(callback);return()=>{this.callbacks.userOnline=this.callbacks.userOnline.filter(cb=>cb!==callback);};}onUserOffline(callback){this.callbacks.userOffline.push(callback);return()=>{this.callbacks.userOffline=this.callbacks.userOffline.filter(cb=>cb!==callback);};}}export default new SocketService();","map":{"version":3,"names":["io","SocketService","constructor","socket","callbacks","receiveMessage","userTyping","userOnline","userOffline","connect","token","serverUrl","process","env","REACT_APP_SOCKET_URL","auth","transports","withCredentials","setupListeners","disconnect","on","data","forEach","callback","joinChat","chatId","emit","leaveChat","sendMessage","messageData","typing","onReceiveMessage","push","filter","cb","onUserTyping","onUserOnline","onUserOffline"],"sources":["/app/src/services/socketService.js"],"sourcesContent":["import { io } from 'socket.io-client';\n\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.callbacks = {\n      receiveMessage: [],\n      userTyping: [],\n      userOnline: [],\n      userOffline: []\n    };\n  }\n\n  connect(token) {\n    const serverUrl = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\n    \n    this.socket = io(serverUrl, {\n      auth: {\n        token\n      },\n      transports: ['websocket'],\n      withCredentials: true\n    });\n    \n    this.setupListeners();\n    \n    return this.socket;\n  }\n  \n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n  \n  setupListeners() {\n    if (!this.socket) return;\n    \n    this.socket.on('receive_message', (data) => {\n      this.callbacks.receiveMessage.forEach(callback => callback(data));\n    });\n    \n    this.socket.on('user_typing', (data) => {\n      this.callbacks.userTyping.forEach(callback => callback(data));\n    });\n    \n    this.socket.on('user_online', (data) => {\n      this.callbacks.userOnline.forEach(callback => callback(data));\n    });\n    \n    this.socket.on('user_offline', (data) => {\n      this.callbacks.userOffline.forEach(callback => callback(data));\n    });\n  }\n  \n  joinChat(chatId) {\n    if (this.socket) {\n      this.socket.emit('join_chat', chatId);\n    }\n  }\n  \n  leaveChat(chatId) {\n    if (this.socket) {\n      this.socket.emit('leave_chat', chatId);\n    }\n  }\n  \n  sendMessage(messageData) {\n    if (this.socket) {\n      this.socket.emit('send_message', messageData);\n    }\n  }\n  \n  typing(data) {\n    if (this.socket) {\n      this.socket.emit('typing', data);\n    }\n  }\n  \n  onReceiveMessage(callback) {\n    this.callbacks.receiveMessage.push(callback);\n    return () => {\n      this.callbacks.receiveMessage = this.callbacks.receiveMessage.filter(cb => cb !== callback);\n    };\n  }\n  \n  onUserTyping(callback) {\n    this.callbacks.userTyping.push(callback);\n    return () => {\n      this.callbacks.userTyping = this.callbacks.userTyping.filter(cb => cb !== callback);\n    };\n  }\n  \n  onUserOnline(callback) {\n    this.callbacks.userOnline.push(callback);\n    return () => {\n      this.callbacks.userOnline = this.callbacks.userOnline.filter(cb => cb !== callback);\n    };\n  }\n  \n  onUserOffline(callback) {\n    this.callbacks.userOffline.push(callback);\n    return () => {\n      this.callbacks.userOffline = this.callbacks.userOffline.filter(cb => cb !== callback);\n    };\n  }\n}\n\nexport default new SocketService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}