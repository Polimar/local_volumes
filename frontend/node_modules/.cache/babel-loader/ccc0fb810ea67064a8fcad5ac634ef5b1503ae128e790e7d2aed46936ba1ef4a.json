{"ast":null,"code":"import axios from'axios';const api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:5000/api',headers:{'Content-Type':'application/json'}});// Interceptor per le risposte\napi.interceptors.response.use(response=>response,error=>{const originalRequest=error.config;// Se è un errore di autenticazione e non è un tentativo di refresh\nif(error.response&&error.response.status===401&&!originalRequest._retry){// Se siamo autenticati, prova a disconnettersi\nconst token=localStorage.getItem('token');if(token){// Rimuovi il token e reindirizza alla pagina di login\nlocalStorage.removeItem('token');window.location.href='/login';}}return Promise.reject(error);});// Aggiungi il token a tutte le richieste\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['Authorization']=`Bearer ${token}`;}return config;},error=>Promise.reject(error));export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","response","use","error","originalRequest","config","status","_retry","token","localStorage","getItem","removeItem","window","location","href","Promise","reject","request"],"sources":["/app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor per le risposte\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const originalRequest = error.config;\n    \n    // Se è un errore di autenticazione e non è un tentativo di refresh\n    if (error.response && error.response.status === 401 && !originalRequest._retry) {\n      // Se siamo autenticati, prova a disconnettersi\n      const token = localStorage.getItem('token');\n      if (token) {\n        // Rimuovi il token e reindirizza alla pagina di login\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Aggiungi il token a tutte le richieste\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default api; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CACrEC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAN,GAAG,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,EAAKA,QAAQ,CACrBE,KAAK,EAAK,CACT,KAAM,CAAAC,eAAe,CAAGD,KAAK,CAACE,MAAM,CAEpC;AACA,GAAIF,KAAK,CAACF,QAAQ,EAAIE,KAAK,CAACF,QAAQ,CAACK,MAAM,GAAK,GAAG,EAAI,CAACF,eAAe,CAACG,MAAM,CAAE,CAC9E;AACA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACT;AACAC,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACF,CAEA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACb,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAV,GAAG,CAACO,YAAY,CAACiB,OAAO,CAACf,GAAG,CACzBG,MAAM,EAAK,CACV,KAAM,CAAAG,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTH,MAAM,CAACN,OAAO,CAAC,eAAe,CAAC,CAAG,UAAUS,KAAK,EAAE,CACrD,CACA,MAAO,CAAAH,MAAM,CACf,CAAC,CACAF,KAAK,EAAKY,OAAO,CAACC,MAAM,CAACb,KAAK,CACjC,CAAC,CAED,cAAe,CAAAV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}